// Code generated by protoc-gen-go.
// source: pin_add.proto
// DO NOT EDIT!

/*
Package spec is a generated protocol buffer package.

It is generated from these files:
	pin_add.proto
	pin_delete.proto
	pin_update.proto
	response_pin.proto
	response_user.proto
	user_get.proto

It has these top-level messages:
	AddRequest
	DeleteRequest
	PinDeleteResponse
	UpdateRequest
	PinResponse
	UserResponse
	UserIdRequest
	UserTokenRequest
*/
package spec

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AddRequest struct {
	Title       string   `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	UserId      int32    `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	Url         string   `protobuf:"bytes,3,opt,name=url" json:"url,omitempty"`
	Timestamp   int64    `protobuf:"varint,4,opt,name=timestamp" json:"timestamp,omitempty"`
	Description string   `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
	Tags        []string `protobuf:"bytes,6,rep,name=tags" json:"tags,omitempty"`
}

func (m *AddRequest) Reset()                    { *m = AddRequest{} }
func (m *AddRequest) String() string            { return proto.CompactTextString(m) }
func (*AddRequest) ProtoMessage()               {}
func (*AddRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AddRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *AddRequest) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *AddRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *AddRequest) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *AddRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *AddRequest) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func init() {
	proto.RegisterType((*AddRequest)(nil), "spec.AddRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for AddPin service

type AddPinClient interface {
	Execute(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*PinResponse, error)
}

type addPinClient struct {
	cc *grpc.ClientConn
}

func NewAddPinClient(cc *grpc.ClientConn) AddPinClient {
	return &addPinClient{cc}
}

func (c *addPinClient) Execute(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*PinResponse, error) {
	out := new(PinResponse)
	err := grpc.Invoke(ctx, "/spec.AddPin/Execute", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AddPin service

type AddPinServer interface {
	Execute(context.Context, *AddRequest) (*PinResponse, error)
}

func RegisterAddPinServer(s *grpc.Server, srv AddPinServer) {
	s.RegisterService(&_AddPin_serviceDesc, srv)
}

func _AddPin_Execute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddPinServer).Execute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spec.AddPin/Execute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddPinServer).Execute(ctx, req.(*AddRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AddPin_serviceDesc = grpc.ServiceDesc{
	ServiceName: "spec.AddPin",
	HandlerType: (*AddPinServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Execute",
			Handler:    _AddPin_Execute_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pin_add.proto",
}

func init() { proto.RegisterFile("pin_add.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 222 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x4c, 0x8f, 0xcf, 0x4a, 0xc3, 0x40,
	0x10, 0xc6, 0x5d, 0xf3, 0x47, 0x32, 0x22, 0xd4, 0x41, 0x64, 0x29, 0x1e, 0x96, 0x9e, 0x72, 0x0a,
	0xa2, 0x37, 0x6f, 0x3d, 0x78, 0xf0, 0x56, 0xf6, 0x05, 0x4a, 0xcc, 0x0e, 0x32, 0xd0, 0x6e, 0xd6,
	0x9d, 0x09, 0xf8, 0x38, 0x3e, 0xaa, 0x34, 0x29, 0xd4, 0xdb, 0xf7, 0xfd, 0x66, 0x06, 0xe6, 0x07,
	0x77, 0x89, 0xe3, 0xbe, 0x0f, 0xa1, 0x4b, 0x79, 0xd4, 0x11, 0x4b, 0x49, 0x34, 0xac, 0x31, 0x93,
	0xa4, 0x31, 0x0a, 0xed, 0x13, 0xc7, 0x65, 0xb2, 0xf9, 0x35, 0x00, 0xdb, 0x10, 0x3c, 0x7d, 0x4f,
	0x24, 0x8a, 0x0f, 0x50, 0x29, 0xeb, 0x81, 0xac, 0x71, 0xa6, 0x6d, 0xfc, 0x52, 0xf0, 0x11, 0xea,
	0x49, 0x28, 0x7f, 0x04, 0x7b, 0xed, 0x4c, 0x5b, 0xf9, 0x73, 0xc3, 0x15, 0x14, 0x53, 0x3e, 0xd8,
	0x62, 0xde, 0x3d, 0x45, 0x7c, 0x82, 0x46, 0xf9, 0x48, 0xa2, 0xfd, 0x31, 0xd9, 0xd2, 0x99, 0xb6,
	0xf0, 0x17, 0x80, 0x0e, 0x6e, 0x03, 0xc9, 0x90, 0x39, 0x29, 0x8f, 0xd1, 0x56, 0xf3, 0xdd, 0x7f,
	0x84, 0x08, 0xa5, 0xf6, 0x5f, 0x62, 0x6b, 0x57, 0xb4, 0x8d, 0x9f, 0xf3, 0xcb, 0x1b, 0xd4, 0xdb,
	0x10, 0x76, 0x1c, 0xf1, 0x19, 0x6e, 0xde, 0x7f, 0x68, 0x98, 0x94, 0x70, 0xd5, 0x9d, 0x94, 0xba,
	0xcb, 0xeb, 0xeb, 0xfb, 0x85, 0xec, 0x38, 0xfa, 0xb3, 0xe6, 0xe6, 0xea, 0xb3, 0x9e, 0x2d, 0x5f,
	0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0x23, 0xdc, 0xa5, 0x4c, 0x10, 0x01, 0x00, 0x00,
}
