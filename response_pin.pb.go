// Code generated by protoc-gen-go.
// source: response_pin.proto
// DO NOT EDIT!

package entity

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type PinResponse struct {
	Id          int32    `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	UserId      int32    `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	Title       string   `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	Url         string   `protobuf:"bytes,4,opt,name=url" json:"url,omitempty"`
	Timestamp   int64    `protobuf:"varint,5,opt,name=timestamp" json:"timestamp,omitempty"`
	Description string   `protobuf:"bytes,6,opt,name=description" json:"description,omitempty"`
	Tags        []string `protobuf:"bytes,7,rep,name=tags" json:"tags,omitempty"`
}

func (m *PinResponse) Reset()                    { *m = PinResponse{} }
func (m *PinResponse) String() string            { return proto.CompactTextString(m) }
func (*PinResponse) ProtoMessage()               {}
func (*PinResponse) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

func (m *PinResponse) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *PinResponse) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *PinResponse) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *PinResponse) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *PinResponse) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *PinResponse) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *PinResponse) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func init() {
	proto.RegisterType((*PinResponse)(nil), "entity.PinResponse")
}

func init() { proto.RegisterFile("response_pin.proto", fileDescriptor3) }

var fileDescriptor3 = []byte{
	// 184 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x4c, 0xcf, 0xb1, 0x6a, 0xc3, 0x30,
	0x10, 0x06, 0x60, 0x64, 0xd9, 0x2a, 0x3e, 0x43, 0x29, 0x47, 0x29, 0x1a, 0x3a, 0x88, 0x4e, 0x9a,
	0xba, 0xf4, 0x29, 0xba, 0x15, 0xbd, 0x40, 0x71, 0x22, 0x11, 0x0e, 0x6c, 0x49, 0x48, 0xe7, 0x21,
	0x8f, 0x95, 0x37, 0x0c, 0x51, 0x0c, 0xc9, 0xf6, 0xff, 0x1f, 0x77, 0xc3, 0x0f, 0x58, 0x42, 0xcd,
	0x29, 0xd6, 0xf0, 0x9f, 0x29, 0x7e, 0xe7, 0x92, 0x38, 0xa1, 0x0a, 0x91, 0x89, 0xcf, 0x5f, 0x17,
	0x01, 0xd3, 0x1f, 0x45, 0xb7, 0x5f, 0xe0, 0x2b, 0x74, 0xe4, 0xb5, 0x30, 0xc2, 0x0e, 0xae, 0x23,
	0x8f, 0x1f, 0xa0, 0xb6, 0x1a, 0xca, 0xaf, 0xd7, 0x5d, 0xb3, 0xbd, 0xe1, 0x3b, 0x0c, 0x4c, 0xbc,
	0x04, 0x2d, 0x8d, 0xb0, 0xa3, 0xbb, 0x17, 0x7c, 0x03, 0xb9, 0x95, 0x45, 0xf7, 0xcd, 0x6e, 0x11,
	0x3f, 0x61, 0x64, 0x5a, 0x43, 0xe5, 0x79, 0xcd, 0x7a, 0x30, 0xc2, 0x4a, 0xf7, 0x00, 0x34, 0x30,
	0xf9, 0x50, 0x8f, 0x85, 0x32, 0x53, 0x8a, 0x5a, 0xb5, 0xbf, 0x67, 0x42, 0x84, 0x9e, 0xe7, 0x53,
	0xd5, 0x2f, 0x46, 0xda, 0xd1, 0xb5, 0x7c, 0x50, 0x6d, 0xc2, 0xcf, 0x35, 0x00, 0x00, 0xff, 0xff,
	0xa3, 0x6c, 0xe6, 0xd9, 0xd8, 0x00, 0x00, 0x00,
}
